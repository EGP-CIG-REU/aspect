# At the top, we define the number of space dimensions we would like to
# work in:

set Dimension                              = 2

# There are several global variables that have to do with what
# time system we want to work in and what the end time is. We
# also designate an output directory.

set Use years in output instead of seconds = true
set Start time                             = 0
set End time                               = 2e10
set CFL number                             = 1.0
set Output directory = depth_dependent_density

# Then there are variables that describe the tolerance of
# the linear solver as well as how the pressure should
# be normalized. Here, we choose a zero average pressure
# at the surface of the domain (for the current geometry, the
# surface is defined as the top boundary).

#set Linear solver tolerance                = 1e-7
#set Temperature solver tolerance           = 1e-10

set Pressure normalization                 = surface
set Surface pressure                       = 0


# Then come a number of sections that deal with the setup
# of the problem to solve. The first one deals with the
# geometry of the domain within which we want to solve.
# The sections that follow all have the same basic setup
# where we select the name of a particular model (here,
# the box geometry) and then, in a further subsection,
# set the parameters that are specific to this particular
# model.

subsection Geometry model
  set Model name = box

  subsection Box
    set X extent = 6E6
    set X repetitions = 48
    set Y extent = 2E6         # = b or h or D (in meters m)
    set Y repetitions = 16
  end
end

# The next section deals with the initial conditions for the
# temperature (there are no initial conditions for the
# velocity variable since the velocity is assumed to always
# be in a static equilibrium with the temperature field).
# There are a number of models with the 'function' model
# a generic one that allows us to enter the actual initial
# conditions in the form of a formula that can contain
# constants. We choose a linear temperature profile that
# matches the boundary conditions defined below plus
# a small perturbation:
subsection Initial conditions
  set Model name = function
  # EGP 2015-11-17: This st the perturbation T' from equation (6.312) in
  # page 495 in Geodynamics by Turcotte and Schubert (2/e). 
  subsection Function
    set Variable names      = x, z
     set Function constants  = T1=1.5E3, L=6E6, zbox=2E6, pi=3.14159265359, z1=0.1, z2=0.9, k=1, amplitude=0.1, T_ref=0.75E3
#     set Function expression = if(z<z1*zbox, (T1-z/zbox) + amplitude * T1 * sin(4*pi*z/zbox) * cos(k*pi*(x-L/2)/L), if(z>z2*zbox, (zbox-z)/zbox + amplitude * T1 * sin(4*pi*z/zbox) * cos(k*pi*(x-L/2)/L), T_ref))
     set Function expression = if(z<z1*zbox, T1 * (1-z/zbox) + amplitude * T1 * cos(k*pi*(x-L/2)/L) * sin(pi*z/zbox), if(z>z2*zbox, T1*(zbox-z)/zbox - amplitude * T1 * cos(k*pi*(x-L/2)/L) * sin(pi*z/zbox), T_ref))
  end
end


# Then follows a section that describes the boundary conditions
# for the temperature. The model we choose is called 'box' and
# allows to set a constant temperature on each of the four sides
# of the box geometry. In our case, we choose something that is
# heated from below and cooled from above. (As will be seen
# in the next section, the actual temperature prescribed here
# at the left and right does not matter.)

subsection Boundary temperature model
  set Model name = box

  subsection Box                     # \Delta T = T_1 - T_0
    set Bottom temperature = 1.5E3   # = T_1
    set Left temperature   = 0
    set Right temperature  = 0
    set Top temperature    = 0       # T_0
  end
end


# We then also have to prescribe several other parts of the model such as
# which boundaries actually carry a prescribed boundary temperature, whereas
# all other parts of the boundary are insulated (i.e., no heat flux through
# these boundaries; this is also often used to specify symmetry boundaries).

subsection Model settings
  set Fixed temperature boundary indicators   = bottom, top # left, right 

  # The next parameters then describe on which parts of the
  # boundary we prescribe a zero or nonzero velocity and
  # on which parts the flow is allowed to be tangential.
  # Here, all four sides of the box allow tangential
  # unrestricted flow but with a zero normal component:

  set Zero velocity boundary indicators       = 
  set Prescribed velocity boundary indicators =
  set Tangential velocity boundary indicators = top, bottom, left, right

  # The final part of this section describes whether we
  # want to include adiabatic heating (from a small
  # compressibility of the medium) or from shear friction,
  # as well as the rate of internal heating. We do not
  # want to use any of these options here:

  set Include adiabatic heating               = false
  set Include shear heating                   = false
end


# The following two sections describe first the
# direction (vertical) and magnitude of gravity and the
# material model (i.e., density, viscosity, etc). We have
# discussed the settings used here in the introduction to
# this cookbook in the manual already.

subsection Gravity model
  set Model name = vertical

  subsection Vertical
    set Magnitude = 10
  end
end

# On Thursday July 21, 2016  at 16:29:41 PDT DLT said Ra = 1.0e8 in the mantle,
# but his depends on what one takes the depth of the mantle to be.

subsection Material model
  set Model name = simple # Decrease the viscosity \mu by 10 to increas Ra by 10

  subsection Simple model 
    # \Kappa = k / \rho_0 c_p = 1 mm^2 / s = 1.0e-6 m^2 / s - DLT 7/21/2016
    set Reference density             = 3000                  # = \rho_0
    set Reference specific heat       = 1333.333333333333     # = c_p
    set Reference temperature         = 0.75E3
    set Thermal conductivity          = 4                     # = k
    set Thermal expansion coefficient = 3E-5                  # = \alpha_v
    # \mu = 1.0e21 for the mantle                           - DLT 7/21/2016
    set Viscosity                     = 1E23                  # = \mu or \eta
    set Density differential for compositional field 1 = 75  # = compositional_delta_rho in simple.cc
  end
  
  set Material averaging              = harmonic average
end

# This is the new part: We declare that there will
# be two compositional fields that will be
# advected along. Their initial conditions are given by
# a function that is one for the lowermost 0.2 height
# units of the domain and zero otherwise in the first case,
# and one in the top most 0.2 height units in the latter.

subsection Compositional fields
  set Number of fields = 0
end

subsection Compositional initial conditions
  set Model name = function

  subsection Function
    set Variable names      = x,y
    set Function constants  = d=2e6
    set Function expression = if(y<0.5*d, 1, 0)
    #set Function expression = if(y<0.5*d, 1, 0) ; if(y>=0.5*d, 0, 0)
  end
end


# We here use a globally refined mesh without
# adaptive mesh refinement.

subsection Mesh refinement
  set Initial adaptive refinement        = 0
# set Strategy                           = composition
  set Initial global refinement          = 0
  set Time steps between mesh refinement = 0
  set Coarsening fraction                = 0.01
  set Refinement fraction                = 0.99 
end
subsection Discretization
  set Use discontinuous composition discretization = true
#  set Use discontinuous temperature discretization = true
  subsection Stabilization parameters
      set Use limiter for discontinuous composition solution = true # apply the limiter to the DG solutions
      set Global composition maximum = 1.0
      set Global composition minimum = 0.0
  end
end

# The final part is to specify what ASPECT should do with the
# solution once computed at the end of every time step. The
# process of evaluating the solution is called `postprocessing'
# and we choose to compute velocity and temperature statistics,
# statistics about the heat flux through the boundaries of the
# domain, and to generate graphical output files for later
# visualization. 

subsection Postprocess
  set List of postprocessors = basic statistics, visualization, heat flux statistics, velocity statistics

  subsection Visualization
    set List of output variables = density, viscosity
    set Output format                 = vtu
#    set Number of grouped files       = 16
    set Time between graphical output = 1e8
  end
end

subsection Termination criteria
  set Checkpoint on termination = false
  set Termination criteria = end step
  set End step = 10
end
